--- C:/Users/JOHNCR~1/AppData/Local/Temp/RenderingVariables.java-rev7.svn001.tmp.java	Thu Oct 16 09:44:27 2014
+++ C:/NitesDevelop/trunk/geoserver-2.6.0/src/wms/src/main/java/org/geoserver/wms/RenderingVariables.java	Wed Oct 15 17:11:45 2014
@@ -5,6 +5,8 @@
  */
 package org.geoserver.wms;
 
+import java.util.Date;
+import java.util.List;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -21,6 +23,17 @@ public class RenderingVariables {
 
     static final Logger LOGGER = Logging.getLogger(RenderingVariables.class);
 
+	// Convert the date to a string that WMS can use.
+	private static String convertDate(Date date){
+		java.text.DateFormat df = new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'.000Z'");
+		// explicitly set timezone of input if needed
+		df.setTimeZone(java.util.TimeZone.getTimeZone("Zulu"));
+		String retVal = df.format(date);
+
+		return retVal;
+	}
+
+
     public static void setupEnvironmentVariables(WMSMapContent mapContent) {
         // setup some SLD variable substitution environment used by rendering transformations
         EnvFunction.setLocalValue("wms_bbox", mapContent.getRenderingArea());
@@ -29,6 +42,27 @@ public class RenderingVariables {
         EnvFunction.setLocalValue("wms_srs", mapContent.getRequest().getSRS());
         EnvFunction.setLocalValue("wms_width", mapContent.getMapWidth());
         EnvFunction.setLocalValue("wms_height", mapContent.getMapHeight());
+
+		// Adding the wms_time and wms_elevation variables to make available 
+        // for WPS use.
+        String elevationStr = "";
+        List<Object> elevationVar = mapContent.getRequest().getElevation();
+		if(elevationVar != null && elevationVar.size() == 1)
+		{
+			if(elevationVar.get(0) != null)
+				elevationStr = elevationVar.get(0).toString();
+		}
+		EnvFunction.setLocalValue("wms_elevation", elevationStr);
+		
+		String timeStr = "";
+        List<Object> timeVar = mapContent.getRequest().getTime();
+		if(timeVar != null && timeVar.size() == 1)
+		{
+			if(timeVar.get(0) != null)
+				timeStr = convertDate((Date)timeVar.get(0)).toString();
+		}
+		EnvFunction.setLocalValue("wms_time", timeStr);
+
         try {
             double scaleDenominator = RendererUtilities.calculateOGCScale(
                     mapContent.getRenderingArea(), mapContent.getMapWidth(), null);
